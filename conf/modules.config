/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${params.study_name}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: GUNZIP_GTF {
        publishDir = [
            enabled: false
        ]
    }

    withName: GTF_TO_TABLE {
        publishDir = [
            enabled: false
        ]
        ext.args = "--feature-type transcript"
    }

    withName: VALIDATOR {
        publishDir = [
            enabled: false
        ]
    }

    withName: DESEQ2_DIFFERENTIAL {
        publishDir = [
            [
                path: { "${params.outdir}/${params.study_name}/tables/differential" },
                mode: params.publish_dir_mode,
                pattern: '*.deseq2.results.tsv'
            ],
            [
                path: { "${params.outdir}/${params.study_name}/tables/processed_counts" },
                mode: params.publish_dir_mode,
                pattern: '*.{normalised_counts,vst,rlog}.tsv'
            ],
            [
                path: { "${params.outdir}/${params.study_name}/plots/qc" },
                mode: params.publish_dir_mode,
                pattern: '*.png'
            ],
            [
                path: { "${params.outdir}/${params.study_name}/tables/deseq2_other" },
                mode: params.publish_dir_mode,
                pattern: '*.{rds,sizefactors.tsv,sessionInfo.log}'
            ]
        ]
        ext.args = { "--vst_nsub 500 --contrast_variable $meta.variable --reference_level $meta.reference --treatment_level $meta.target --blocking_variables $meta.blocking" }
    }
    withName: PLOT_EXPLORATORY {
        publishDir = [
            path: { "${params.outdir}/${params.study_name}/plots/exploratory" },
            mode: params.publish_dir_mode,
        ]
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        ext.args = "--assay_names raw,normalised,variance_stabilised --final_assay variance_stabilised"
    }

    withName: PLOT_DIFFERENTIAL {
        publishDir = [
            path: { "${params.outdir}/${params.study_name}/plots/differential" },
            mode: params.publish_dir_mode,
        ]
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        ext.args = { "--reference_level $meta.reference --treatment_level $meta.target" }
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/${params.study_name}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: RMARKDOWNNOTEBOOK {
        conda = { (params.enable_conda ? "bioconda::r-shinyngs=1.4.2" : null) }
        container = { "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ? 'https://depot.galaxyproject.org/singularity/r-shinyngs%3A1.4.2--r42hdfd78af_3':'quay.io/biocontainers/r-shinyngs:1.4.2--r42hdfd78af_3' }" }
    }

    withName: CUSTOM_MATRIXFILTER {
        ext.prefix = { "${meta.id}" }
        ext.args   = [
            "--minimum_samples ${params.filtering_min_samples}",
            "--minimum_abundance ${params.filtering_min_abundance}",
            params.filtering_min_proportion ? "--minimum_proportion ${params.filtering_min_proportion}" : '',
            params.filtering_grouping_var ? "--grouping_variable ${filtering_grouping_var}" : ''
        ].join(' ').trim()
    }
}
